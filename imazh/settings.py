"""
Django settings for imazh project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-)!ly+xdx%u1es*og=g!l^ldj(t)1b%bvr6u7ld6%f46-g7vrxl')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = SECRET_KEY = os.environ.get('DEBUG', True)

#if you wanna use docker use this :
#ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "127.0.0.1").split(',')

#if you use windows redis server use this :
ALLOWED_HOSTS = ['mannyebi.com','www.mannyebi.com', '127.0.0.1']

TIME_FORMAT = 'h:i A'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.humanize',

    'django_jalali',

    'base.apps.BaseConfig',
    'panel.apps.PanelConfig',
    
    'django_celery_beat',
]


LANGUAGE_CODE = 'fa'

import locale
locale.setlocale(locale.LC_ALL, "fa_IR.utf8")


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'imazh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'imazh.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'data/db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'base.User'


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Iran'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/images/'


STATICFILES_DIRS = [
    BASE_DIR  / 'static'
]

MEDIA_ROOT = os.path.join(BASE_DIR, "static/images")

STATIC_ROOT = BASE_DIR / "staticfiles"




# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#use this if you wanna use docker :
#CELERY_BROKER_URL = os.environ.get('CELERY_BROKER', 'redis://redis:6379/0')
#CELERY_RESULT_BACKEND = os.environ.get('CELERY_BACKEND', 'redis://redis:6379/0')


CELERY_BROKER_URL = os.environ.get('CELERY_BROKER', 'redis://:I6O9cfIrJktT6f3MPlSAWdvN@annapurna.liara.cloud:33854/0')
CELERY_RESULT_BACKEND = os.environ.get('CELERY_BACKEND', 'redis://:I6O9cfIrJktT6f3MPlSAWdvN@annapurna.liara.cloud:33854/0')
CELERY_BEAT_SCHEDULE_FILENAME = 'data/celerybeat-schedule'
#else use this :
#BROKER_URL = 'redis://:I6O9cfIrJktT6f3MPlSAWdvN@imazh:6379/0'
#CELERY_RESULT_BACKEND = 'redis://:I6O9cfIrJktT6f3MPlSAWdvN@imazh:6379/0'
#BROKER_URL = 'redis://localhost:6379/0'
#CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
#CELERY_ACCEPT_CONTENT = ['application/json']
#CELERY_TASK_SERIALIZER = 'json'
#CELERY_RESULT_SERIALIZER = 'json'
#CELERY_TIMEZONE = 'Asia/Tehran'


#CELERY_BROKER_URL = "redis://:I6O9cfIrJktT6f3MPlSAWdvN@imazh:6379/0"
#CELERY_RESULT_BACKEND = "redis://:I6O9cfIrJktT6f3MPlSAWdvN@imazh:6379/0"

